#%RAML 1.0
title: exchange-xapi
version: v2
mediaType: application/json
baseUri: https://anypoint.mulesoft.com/exchange/api/v2

uses:
  IdentityTypes: libraries/identityTypes.raml

traits:
  assets-search: !include traits/assets-search.raml
  assetsPostHeader: !include traits/assetsPostHeader.raml
  deleteable: !include traits/deleteable.raml
  pagination: !include traits/paginationv2.raml
  updateableByForce: !include traits/updateableByForce.raml
  deleteableByForce: !include traits/deleteableByForce.raml
  pagesOrderRevisionHeader: !include traits/pagesOrderRevisionHeader.raml
  pagesOrderRevisionResponseHeader: !include traits/pagesOrderRevisionResponseHeader.raml
  pagePoster: !include traits/pagePoster.raml

types:
  SingleAsset: !include types/singleAsset.raml

securitySchemes:
  oauth_2_0: !include securitySchemes/oauth2.raml

resourceTypes:
  assetStatus: !include resourceTypes/assetStatus.raml

  assetsSearch: !include resourceTypes/assetsSearch.raml

  assetsPost: !include resourceTypes/assetsPost.raml

  apiGroupInstance: !include resourceTypes/apiGroupInstance.raml

  apiGroupTiers: !include resourceTypes/apiGroupTiers.raml

  applicationInstances: !include resourceTypes/applicationInstances.raml

  assetsPublicationPost: !include resourceTypes/assetsPublicationPost.raml

  category: !include resourceTypes/category.raml

  categoryConfiguration: !include resourceTypes/categoryConfiguration.raml

  clientApplications: !include resourceTypes/clientApplications.raml

  customField: !include resourceTypes/customField.raml

  customFieldCategory: !include resourceTypes/customFieldCategory.raml

  domain: !include resourceTypes/domain.raml

  editablePage: !include resourceTypes/editablePage.raml

  field: !include resourceTypes/field.raml

  fieldConfiguration: !include resourceTypes/fieldConfiguration.raml

  identities: !include resourceTypes/identities.raml

  identitiesWithRole: !include resourceTypes/identitiesWithRole.raml

  page: !include resourceTypes/page.raml

  pages: !include resourceTypes/pages.raml

  pagesOrder: !include resourceTypes/pagesOrder.raml

  portal: !include resourceTypes/portal.raml

  portalCustomization: !include resourceTypes/portalCustomization.raml

  portalResource: !include resourceTypes/portalResource.raml

  portalResources: !include resourceTypes/portalResources.raml

  postablePortalResources: !include resourceTypes/postablePortalResources.raml

  publicationStatus: !include resourceTypes/publicationStatus.raml

  queries: !include resourceTypes/queries.raml

  query: !include resourceTypes/query.raml

  rating: !include resourceTypes/rating.raml

  review: !include resourceTypes/review.raml

  reviews: !include resourceTypes/reviews.raml

  simpleAsset: !include resourceTypes/simpleAsset.raml

  termsAndConditions: !include resourceTypes/termsAndConditions.raml

  tiers: !include resourceTypes/tiers.raml

  versionGroups: !include resourceTypes/versionGroups.raml


/assets:
  displayName: Assets
  description: Represents all the resources under the assets path
  type: assetsPost

  /search:
    displayName: Assets Search
    description: Assets Search
    type: assetsSearch

  /{groupId}/{assetId}:
    displayName: Asset
    description: Asset by groupId and assetId
    uriParameters:
      groupId:
        description: groupId of the asset
        type: string
      assetId:
        description: assetId of the asset
        type: string
    delete:
      description: Deletes an asset
      is: [ deleteable ]
      responses:
        204:
          description: Asset deleted
        409:
          description: There were conflicts while deleting
    patch:
      displayName: Updates name and description
      description: Updates asset metadata (name and description)
      body:
        application/json:
          example: !include examples/v2/patch-asset-body.json
          type: !include schemas/v2/patch-asset-body.json
      responses:
        204:

    /icon:
      displayName: Icon
      description: Asset icon
      put:
        displayName: Uploads an icon
        description: Uploads an icon as a binary file
        body:
          "*/*":
            example: !include ./examples/v2/icon.svg
        responses:
          201:
            body:
              application/json:
                example: !include examples/v2/iconResponse.json
      delete:
        description: Delete an icon for the whole ga
        responses:
          204:
            description: Icon deleted

    /public:
      displayName: Public Versions
      description: Public asset versions
      put:
        displayName: Updates versions visibility
        description: Sets the public versions for the asset
        body:
          application/json:
            type: !include schemas/v2/public-versions.json
            example: !include examples/v2/public-versions.json
        responses:
          204:

    /asset:
      displayName: Asset
      description: Asset
      type: simpleAsset

    /minorVersions:
      displayName: Minor Versions
      description: Asset minor versions

      /{minorVersion}:
        displayName: By Minor Version
        description: Asset by minor version
        uriParameters:
          minorVersion:
            type: string
            description: Minor version
            pattern: ^[0-9]+\.[0-9]+$
            example: "2.22"

        /portal:
          displayName: Portal Documentation
          description: Asset documentation by minor version

          /pages:
            displayName: Pages
            description: Asset documentation pages by minor version
            type: pages

        /status:
          displayName: Status
          description: Asset status by minor version
          type: assetStatus

    /versionGroups:
      displayName: Version Groups
      description: Version groups of an asset
      type: versionGroups
      uriParameters:
        groupId:
          description: groupId of the asset
          type: string
        assetId:
          description: assetId of the asset
          type: string

      /{versionGroup}:
        displayName: By Version Group
        description: Asset by version group
        uriParameters:
          versionGroup:
            description: Version group of the asset
            type: string

        /apiGroupInstances:
          displayName: API Groups Instances
          description: API Groups instances
          is: [pagination]
          type: apiGroupInstance

        /environments/{environmentId}:
          displayName: Environment
          description: A single environment identified by an "environmentId"
          uriParameters:
            environmentId:
              description: The id of the environment for this API Group instance
              type: string
              minLength: 36
              maxLength: 36

          /apiGroupInstances/{apiGroupInstanceId}:
            displayName: Instance
            description: A single API Group instance identified by a "apiGroupInstanceId"
            uriParameters:
              apiGroupInstanceId:
                description: Id of an API Group instance
                type: integer
                minimum: 0
            patch:
              displayName: Updates API Group Visibility
              description: Updates API Group visibility
              body:
                application/json:
                  type: !include schemas/v2/patchApiGroup.json
                  example: !include examples/v2/patchApiGroup.json
              responses:
                204:
                  description: API Group visibility successfully updated

            /tiers:
              displayName: Instance Tiers
              description: Retrieves a list of tiers for an API Group instance
              type: apiGroupTiers

        /terms:
          displayName: Terms and Conditions
          description: Gets underlying API terms and conditions for an asset version group
          type: termsAndConditions

        /instances:
          displayName: API Instances
          description: A collection of API instances
          get:
            description: Gets API instances
            responses:
              200:
                body:
                  application/json:
                    example: !include examples/v2/get-instances.json

          /{apiInstanceId}:
            displayName: Instance
            description: A single API instance identified by an "apiInstanceId"
            uriParameters:
              apiInstanceId:
                description: The id of the API instance
                type: string

            /relatedApiGroupInstances:
              displayName: API Group Instances
              description: API Group instances that include an API instance
              uriParameters:
                apiInstanceId:
                  description: id of the api instance
                  type: string
              get:
                description: Gets API group instances that include an API instance
                responses:
                  200:
                    body:
                      application/json:
                        example: !include examples/v2/get-related-api-groups.json

            /tiers:
              displayName: Instance Tiers
              description: A collection of the available SLA Tiers for a given API instance
              type: tiers

          /external:
            displayName: External Instances
            description: External instances
            post:
              displayName: Creates new instance
              description: Creates a new external API instance
              body:
                application/json:
                  type: !include schemas/post-API-instance-body.json
                  example: !include examples/post-API-instance-body.json
              responses:
                201:
                  body:
                    application/json:
                      type: !include schemas/API-instance.json
                      example: !include examples/API-instance.json

            /{id}:
              displayName: Instance Id
              description: A single instance
              uriParameters:
                id:
                  description: Id of the external instance
                  type: string
                  pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                  example: 7a7190da-29f3-451a-b2b2-ebd6f7e1f8ea
              patch:
                displayName: Updates an instance
                description: Updates an existing external API instance
                body:
                  application/json:
                    type: !include schemas/patch-API-instance-body.json
                    example: !include examples/patch-API-instance-body.json
                responses:
                  404:
                    description: External instance not found
                  204:
                    description: External instance updated
              delete:
                description: Deletes an existing external API instance
                responses:
                  404:
                    description: External instance not found
                  204:
                    description: External instance deleted

          /managed:
            displayName: Managed Instances
            description: Managed instances

            /{id}:
              displayName: Instance Id
              description: A single managed instance
              uriParameters:
                id:
                  description: Id of the managed instance
                  type: string
                  example: '9897'
              patch:
                displayName: Updates an instance
                description: Updates an existing managed API instance
                body:
                  application/json:
                    type: !include schemas/patch-API-instance-body.json
                    example: !include examples/patch-API-instance-body.json
                responses:
                  204:
                    description: Managed instance updated
                  404:
                    description: Managed instance not found

    /identities:
      displayName: Identities
      description: Identities assigned to an asset with their role
      type: identitiesWithRole

    /domain:
      displayName: Domain
      description: Allowed domain for the asset
      type: domain

  /{groupId}/{assetId}/{version}:
    displayName: Asset Version
    description: Asset version
    uriParameters:
      groupId:
        description: groupId of the asset
        type: string
      assetId:
        description: assetId of the asset
        type: string
      version:
        description: version of the asset
        type: string
        pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
        example: "2.22.45"
    delete:
      is: [ deleteable ]
      description: Deletes an asset by its ID
      responses:
        204:
          description: Asset deleted
        409:
          description: There were conflicts while deleting

    /asset:
      displayName: Asset
      description: Asset
      type: simpleAsset

    /rating:
      displayName: Rating
      description: Rating of the asset
      type: rating

    /reviews:
      displayName: Reviews
      description: Reviews of the asset
      type: reviews

      /{reviewId}:
        displayName: Review
        description: A single asset review identified by a "reviewId"
        type: review
        uriParameters:
          reviewId:
            description: Id of the review. It is a UUID.
            type: string
            pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
            example: 7a7190da-29f3-451a-b2b2-ebd6f7e1f8ea

    /api:
      displayName: API
      description: API

      /model:
        displayName: API Model
        description: API Model
        get:
          description: Gets the JSON-LD model for this API
          responses:
            200:
              description: Returns the JSON-LD model for this API
              body:
                application/json:
                  example: !include examples/webapi-graph.json

      /root:
        displayName: Root File
        description: Root file for the API
        get:
          description: Redirects to path of root file for this API
          responses:
            301:
              description: Redirection to root file if available.

      /{+filePath}:
        displayName: File Path
        description: API file path
        uriParameters:
          +filePath:
            description: The path of the API file
            type: string
        get:
          description: Gets the API file content
          responses:
            200:
              description: |
                Retrieved file contents for the specified file.
                - For example, if api.raml was specified the response will be that raml.

    /domain:
      displayName: Domain
      description: Allowed domain for the asset
      type: domain

    /portal:
      displayName: Portal Documentation
      description: Asset portal documentation
      type: portal
      patch:
        displayName: Publishes draft documentation
        description: |
          Publishes draft version.
          This endpoint should be executed without specifying any body.
        responses:
          204:
            description: Asset documentation updated
          404:
            description: Asset documentation does not exist
          409:
            description: There were conflicts while publishing

      /pages:
        displayName: Pages
        description: Asset documentation pages
        type: pages

        /{+pagePath}:
            displayName: Page
            description: A single documentation page path identified by a "pagePath"
            type: page

      /resources:
        displayName: Resources
        description: Asset documentation resources
        type: portalResources

        /{resourceId}:
          displayName: Resource
          description: A single asset documentation resource identified by a "resourceId"
          type: portalResource

      /draft:
        displayName: Draft
        description: Asset documentation draft
        type: portal
        delete:
          description: Discards asset documentation draft
          responses:
            204:
              description: Draft deleted
        put:
          displayName: Publishes draft documentation
          description: |
            Publishes asset documentation draft.
            This endpoint should be executed without specifying any body.
          responses:
            204:
              description: Asset documentation updated
            404:
              description: Asset documentation does not exist
            409:
              description: There were conflicts while publishing

        /pages:
          displayName: Pages
          description: Asset documentation draft pages
          type: pages
          post:
            is: [pagePoster]
            responses:
              201:
                description: Page created.
              409:
                description: Page already exists

          /{+pagePath}:
            displayName: Page
            description: A single documentation page path identified by a "pagePath"
            type: {editablePage: {type: "version of an asset"}}
            get:
              description: Gets particular pages for a specific version of an asset
              responses:
                200:
                  body:
                    text/html:
                      example: !include ./examples/page.html
                    text/markdown:
                      example: !include ./examples/page.md
                    application/json:
                      example: !include ./examples/page.json
                404:
                  description: Page not found

        /pagesOrder:
          displayName: Pages Order
          description: Asset documentation pages order
          type: pagesOrder

        /resources:
          displayName: Resources
          description: Asset documentation resources
          type: postablePortalResources

          /{resourceId}:
            displayName: Resource
            description: A single documentation resource identified by a "resourceId"
            type: portalResource
            delete:
              description: Deletes a resource
              responses:
                204:
                  description: Resource deleted

    /policies:
      displayName: Policies
      description: Asset Policies

      /instances:
        displayName: API Instances
        description: API instances affected by the policy
        is: [pagination]
        get:
          description: Gets an array of API instances affected by the policy
          responses:
            200:
              description: Successfully completed
              headers:
                x-resources-count:
                  type: number
                  description: The total amount of instances affected by that policy, where the user has permissions to see them, pagination purpose.
                x-total-count:
                  type: number
                  description: The total amount of instances affected by that policy even if the user has no permissions to see them.
              body:
                application/json:
                  example: !include examples/get-policy-instances-response.json

      /environments:
        displayName: Environments
        description: Environments affected by the policy
        is: [pagination]
        get:
          description: Gets an array with environments affected by the policy
          responses:
            200:
              description: Successfully completed
              headers:
                x-resources-count:
                  type: number
                  description: The total amount of environments affected by the policy, where the user has permissions to see them, pagination purpose.
                x-total-count:
                  type: number
                  description: The total amount of environments affected by the policy even if the user has no permissions to see them.
              body:
                application/json:
                  example: !include examples/get-policy-environments-response.json

    /tags:
      displayName: Tags
      description: Asset tags
      put:
        displayName: Upserts tags
        description: Upserts asset tags
        responses:
          204:
            description: Tags updated
        body:
          application/json:
            type:  !include schemas/tags.json
            example: !include examples/tags.json

      /fields:
        displayName: Custom Fields
        description: Tags of type "custom field"

        /{tagKey}:
          displayName: Field Key
          description: The key that identifies the custom field
          type: customField

      /categories:
        displayName: Categories
        description: Tags of type "category"

        /{tagKey}:
          displayName: Category Key
          description: The key that identifies the category
          type: customFieldCategory

    /status:
      displayName: Status
      description: The status of the asset
      type: assetStatus

/organizations:
  displayName: Organizations
  description: Represents all the resources under the organizations path

  /{masterOrganizationId}:
    displayName: Master Organization
    description: Master organization id
    uriParameters:
      masterOrganizationId:
        description: The Id of the master organization
        type: string
        pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        example: "434b78c3-bcd9-412d-9428-dec2f8c72cb2"

    /clientProviders/{clientProviderId}/grantTypes:
      displayName: Grant Types
      description: Grant types of a client provider
      uriParameters:
        clientProviderId:
          description: The Id of the client provider
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          example: "434b78c3-bcd9-412d-9428-dec2f8c72cb2"
      get:
        description: Gets the grant types for the client provider
        responses:
          200:
            body:
              application/json:
                example: !include examples/v2/get-grant-types.json

    /identities:
      displayName: Identities
      description: Identities of an organization
      type: identities

    /applications:
      displayName: Applications
      description: A collection of applications that consume APIs via contracts
      type: clientApplications

      /{applicationId}:
        displayName: Application
        description: A single application identified by an "applicationId"
        uriParameters:
          applicationId:
            description: The Id of an application
            example: "273463"
        get:
          description: Gets a client application
          responses:
            200:
              body:
                application/json:
                  example: !include examples/get-client-application-response.json
        patch:
          displayName: Updates client application
          description: Updates a client application
          body:
            application/json:
              example: !include examples/patch-client-application-body.json
              type: !include schemas/patch-client-application-body.json
          responses:
            200:
              body:
                application/json:
                  example: !include examples/patch-client-application-response.json
        delete:
          description: Deletes a client application
          responses:
            204:
              description: Client application deleted.

        /environments/{environmentId}:
          displayName: Environment
          description: A single environment identified by an "environmentId"
          uriParameters:
            environmentId:
              description: The id of the environment for this API Group instance
              type: string
              minLength: 36
              maxLength: 36

          /apiGroupInstances:
            displayName: API Groups Instances
            description: API Groups associated to an application

            /{apiGroupInstanceId}:
              displayName: Instance
              description: A single API Group instance identified by an "apiGroupInstanceId"
              uriParameters:
                apiGroupInstanceId:
                  description: Id of the API Group instance
                  type: integer

              /limits:
                displayName: Limits
                description: Limits of each instance part of the API Group
                get:
                  description: Gets the list of instances of the API Group with their corresponding limit
                  queryParameters:
                    tierId:
                      type: integer
                      minimum: 1
                      required: true
                  responses:
                    200:
                      body:
                        application/json:
                          example: !include examples/v2/get-api-group-limits.json

        /instances:
          displayName: Application Instances
          description: Application instances
          type: applicationInstances

          /{instanceId}:
            displayName: Instance
            description: A single API instance associated to an application an identified by an "instanceId"
            uriParameters:
              instanceId:
                description: Id of the API instance
                type: integer
                minimum: 1

            /contracts:
              displayName: Contracts
              description: The contracts for an API instance
              get:
                description: Gets the list of contracts for an API instance
                responses:
                  200:
                    body:
                      application/json:
                        example: !include examples/v2/get-instance-contracts.json

        /contracts:
          displayName: Application Contracts
          description: Contracts associated with an application
          get:
            description: Gets a list of applications with contracts with the application
            queryParameters:
              includeContractsForApiVersion:
                type: integer
                description: This field is used to filter by API version
                required: false
            responses:
              200:
                body:
                  application/json:
                    example: !include examples/contracts.json
                    type: !include schemas/contracts.json
          post:
            displayName: Creates a contract
            description: Creates a contract for an API or an API Group
            body:
              application/json:
                example: !include examples/v2/create-api-group-contract.json
                type: !include schemas/v2/create-contract.json
            responses:
              201:
                body:
                  application/json:
                    example: !include examples/v2/contract-created.json

          /{contractId}:
            displayName: Contract
            description: A single contract associated with an application and identified by a "contractId"
            uriParameters:
              contractId:
                description: Id of the contract
                type: integer
                minimum: 1
            patch:
              displayName: Updates SLA tier
              description: Updates contract SLA tier for an API or an API Group
              body:
                application/json:
                  example: !include examples/v2/update-contract.json
                  type: !include schemas/v2/update-contract.json
              responses:
                200:
                  body:
                    application/json:
                      example: !include examples/v2/contract-updated.json

        /secret/reset:
          displayName: Reset Application Secret
          description: Resets client secret for the application
          post:
            displayName: Resets client secret
            description: |
              Resets the client secret for the application.
              This endpoint should be executed without specifying any body.
            responses:
              201:
                description: Secret reseted

  /{organizationId}:
    displayName: Organization
    description: A single organization identified by an "organizationId"
    uriParameters:
      organizationId:
        description: The Id of organization
        type: string
        pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        example: "434b78c3-bcd9-412d-9428-dec2f8c72cb2"
    delete:
      description: Unconditional delete organization
      responses:
        204:
          description: Organization deleted

    /assets/{groupId}/{assetId}:
      displayName: Asset
      description: Asset by groupId and assetId

      /{version}:
        displayName: Asset Version
        description: Asset version
        type: assetsPublicationPost
        uriParameters:
          version:
            description: Asset version
            type: string
            pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
            example: "2.22.45"

        /publication:
          displayName: Publication
          description: Asset publication

          /extendedStatus:
            displayName: Extended Status
            description: Extended asset publication status

            /{runId}:
              displayName: By RunId
              description: Extended asset publication status by "runId"
              get:
                description: Gets extended asset publication extended status by runId
                responses:
                  200:
                    body:
                      type: !include types/extendedAssetStatus.raml

          /status:
            displayName: Status
            description: Asset publication status
            type: publicationStatus

            /{runId}:
              displayName: By RunId
              description: Asset publication status by "runId"
              type: publicationStatus

    /fields:
      displayName: Custom Fields
      description: Tags of type "custom field"
      type: fieldConfiguration

      /{tagKey}:
        displayName: Field Key
        description: The key that identifies the custom field
        type: field

    /categories:
      displayName: Categories
      description: Tags of type "category"
      type: categoryConfiguration

      /{tagKey}:
        displayName: Category Key
        description: The key that identifies the category
        type: category

    /queries:
      displayName: Organization Queries
      description: Saved searches queries that belong to an organization
      type: queries

      /{queryId}:
        displayName: Query
        description: A single organization saved search query identified by a "queryId"
        type: query

/portals:
  displayName: Public Portals
  description: Public portals

  /{organizationDomain}:
    displayName: Portal Domain
    description: Public portal domain
    type: portalCustomization
    patch:
      displayName: Publishes draft portal
      description: |
        Publishes draft portal customization.
        This endpoint should be executed without specifying any body.
      responses:
        204:
          description: Portal updated
        404:
          description: Custom portal does not exist
        409:
          description: There were conflicts while publishing

    /metadata:
      displayName: Metadata
      description: Organization domain metadata
      get:
        description: Gets organization domain metadata from authentication service
        responses:
          200:
            body:
              application/json:
                example: !include ./examples/v2/get-portals-metadata.json

    /resources:
      displayName: Resources
      description: Public portal customization resources
      type: portalResources

      /{resourceId}:
        displayName: Resource
        description: A single portal resource identified by a "resourceId"
        type: portalResource

    /assets:
      displayName: Public Assets
      description: Public assets

      /search:
        displayName: Public Assets Search
        description: Public Assets Search
        type: assetsSearch

      /{groupId}/{assetId}:
        displayName: Asset
        description: Public asset by groupId and assetId
        uriParameters:
          groupId:
            description: groupId of the asset
            type: string
          assetId:
            description: assetId of the asset
            type: string

        /asset:
          displayName: Asset
          description: Asset
          type: simpleAsset

        /versionGroups:
          displayName: Version Groups
          description: Retrieve public version groups of an asset

          /{versionGroup}:
            displayName: By Version Group
            description: Public asset by versionGroup
            uriParameters:
              versionGroup:
                description: Version group of the asset
                type: string

            /apiGroupInstances:
              displayName: API Group instances
              description: API Group instances for an asset version group
              is: [pagination]
              type: apiGroupInstance

            /environments/{environmentId}:
              displayName: Environment
              description: A single environment identified by an "environmentId"
              uriParameters:
                environmentId:
                  description: The id of the environment for this API Group instance
                  type: string
                  minLength: 36
                  maxLength: 36

              /apiGroupInstances/{apiGroupInstanceId}:
                displayName: Instance
                description: A single API Group instance identified by an "apiGroupInstanceId"
                uriParameters:
                  apiGroupInstanceId:
                    description: Id of the API Group instance
                    type: integer
                    minimum: 0

                /tiers:
                  displayName: Tiers
                  description: Tiers for a public API Group instance
                  type: apiGroupTiers

            /terms:
              displayName: Terms and Conditions
              description: Gets public underlying API terms and conditions for a public asset version group
              type: termsAndConditions

        /{version}:
          displayName: Asset Version
          description: Public asset version
          uriParameters:
            version:
              description: version of the asset
              type: string
              pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
              example: "2.22.45"

          /asset:
            displayName: Asset
            description: Asset
            type: simpleAsset

    /applications/{applicationId}:
      displayName: Application
      description: A single application identified by an "applicationId"
      uriParameters:
        applicationId:
          description: The Id of an application

      /instances:
        displayName: Instances
        description: Public application instances
        type: applicationInstances

    /domain:
      displayName: Organization Domain
      description: Public portal domain
      type: domain
      put:
        displayName: Updates a domain
        description: Updates a domain for an organization
        body:
          text/plain:
            example: domain
        responses:
          204:
      delete:
        description: Removes a domain
        responses:
          204:

    /draft:
      displayName: Draft
      description: Public portal customization draft
      type: portalCustomization
      put:
        displayName: Updates customization
        description: Updates the portal customization draft
        body:
          application/json:
            example: !include examples/portalCustomizationUpdate.json
        responses:
          204:
            description: Custom portal updated
          422:
            description: Customization Data is invalid
      delete:
        description: Deletes the portal customization draft
        responses:
          204:
            description: Draft portal deleted
          404:
            description: Draft does not exist

      /pages:
        displayName: Pages
        description: Public portal customization draft pages
        post:
          is: [pagePoster]
          responses:
            201:
              description: Page created.
            409:
              description: Page already exists
            422:
              description: Maximum page quantity exceeded

        /{+pagePath}:
          displayName: Page
          description: A single portal draft page identified by a "pagePath"
          type: {editablePage: {type: "custom draft"}}

      /pagesOrder:
        displayName: Pages Order
        description: Public portal pages order
        type: pagesOrder

      /resources:
        displayName: Resources
        description: Public portal customization resources
        type: postablePortalResources

        /{resourceId}:
          displayName: Resource
          description: A single portal resource identified by a "resourceId"
          type: portalResource
          delete:
            description: Deletes portals resource
            responses:
              204:
                description: Resource deleted

    /pages/{+pagePath}:
      displayName: Page
      description: A single portal page identified by a "pagePath"
      type: page

/users:
  displayName: Users
  description: Users

  /me/queries:
    displayName: Queries
    description: Saved searches queries that belong to an user
    type: queries

    /{queryId}:
      displayName: Query
      description: A single user saved search query identified by a "queryId"
      type: query
